version: '3.7'

services:
    rabbitmq:
      image: rabbitmq:3-management-alpine
      container_name: rabbitmq
      ports:
          - 5672:5672
          - 15672:15672

    eureka-service:
      image: eureka-img
      container_name: eureka-spring
      build:
        context: ./eureka
        dockerfile: Dockerfile
      ports:
          - "8761:8761"
      restart: always

    mysql-service-zuul:
      image: mysql:latest
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_USER=student_admin
        - MYSQL_PASSWORD=StudentAdmin123!
        - MYSQL_DATABASE=zuul
      restart: always
      volumes: 
        - zuul-vol:/var/lib/mysql

    mysql-service-student2students:
      image: mysql:latest
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_USER=student_admin
        - MYSQL_PASSWORD=StudentAdmin123!
        - MYSQL_DATABASE=student2students
      restart: always
      volumes: 
        - student2students-vol:/var/lib/mysql

    mysql-service-posting-service:
      image: mysql:latest
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_USER=student_admin
        - MYSQL_PASSWORD=StudentAdmin123!
        - MYSQL_DATABASE=posting_service
      restart: always
      volumes:
        - posting-vol:/var/lib/mysql

    mysql-service-email-service:
      image: mysql:latest
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_USER=student_admin
        - MYSQL_PASSWORD=StudentAdmin123!
        - MYSQL_DATABASE=email_service
      restart: always
      volumes:
        - email-vol:/var/lib/mysql

    zuul-proxy:
      depends_on:
        - mysql-service-zuul
        - rabbitmq
      image: zuul-img
      container_name: zuul-proxy-spring
      build:
        context: ./zuul
        dockerfile: Dockerfile
      ports:
        - "8080:8080"
      restart: always
      environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql-service-zuul:3306/zuul?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
        SPRING_DATASOURCE_USERNAME: student_admin
        SPRING_DATASOURCE_PASSWORD: StudentAdmin123!    
    
    student-service:
      depends_on:                           
        - mysql-service-student2students
        - eureka-service
        - rabbitmq
      image: student2students
      container_name: student2students-spring
      build:
        context: ./Student2Students
        dockerfile: Dockerfile
      restart: always
        
      environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql-service-student2students:3306/student2students?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
        SPRING_DATASOURCE_USERNAME: student_admin
        SPRING_DATASOURCE_PASSWORD: StudentAdmin123!

    posting-service:
      depends_on:                           
        - mysql-service-posting-service
        - eureka-service
        - rabbitmq
      image: posting-service-img
      container_name: posting-service-spring
      build:
        context: ./posting-service
        dockerfile: Dockerfile
      restart: always
        
      environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql-service-posting-service:3306/posting_service?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
        SPRING_DATASOURCE_USERNAME: student_admin
        SPRING_DATASOURCE_PASSWORD: StudentAdmin123!

    email_service:
      depends_on:
        - mysql-service-email-service
        - eureka-service
        - rabbitmq
      image: email-service-img
      container_name: email-service-spring
      build:
        context: ./email-service
        dockerfile: Dockerfile
      restart: always

      environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql-service-email-service:3306/email_service?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
        SPRING_DATASOURCE_USERNAME: student_admin
        SPRING_DATASOURCE_PASSWORD: StudentAdmin123!

    image_service:
      depends_on:
        - eureka-service
      image: image-service-img
      container_name: image-service-spring
      build:
        context: ./image-service
        dockerfile: Dockerfile
      restart: always


volumes:
  zuul-vol:
  student2students-vol:
  posting-vol:
  email-vol:
